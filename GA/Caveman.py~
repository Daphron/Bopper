import random as r

MAXIMUM_WEIGHT_OF_CAVEMAN = 1
HEIGHT = 5

MINIMUM_LENGTH_FOREARM = 0.5
MAXIMUM_LENGTH_FOREARM = 1


MINIMUM_LENGTH_BICEP = 0.5
MAXIMUM_LENGTH_BICEP = 1

MINIMUM_LENGTH_STRING = 0.5
MAXIMUM_LENGTH_STRING = 1

MINIMUM_RADIUS_BOPPER = 0
MAXIMUM_RADIUS_BOPPER = 1

MINIMUM_HEIGHT_ARMS = 0
MAXIMUM_HEIGHT_ARMS = HEIGHT

class Appendage:
    def __init__(self, wFor, wBic):
        #weight meant to be set
        self.wForearm = wFor
        self.wBicep = wBic
        
class Caveman:    
    def __init__(self, numApp):
        self.nAppendages = numApp
        self.hBody = HEIGHT

        #setting the weights, and then normalizing them.
        weg = [r.random() for _ in ]
        sumw = sum(weg)
        weg = [i/sumw for i in weg]
        
        #have to change code if add more appendages in. This only normalizes the weight for one.
        self.wForearm = weg[0]
        self.wBopper = weg[1]
        self.wBody = weg[2]
        self.wBicep = weg[3]
        self.wForearm = weg[4]
        
        self.lForearm = r.uniform(MAXIMUM_LENGTH_FOREARM, MINIMUM_LENGTH_FOREARM)
        self.lBicep = r.uniform(MAXIMUM_LENGTH_BICEP, MINIMUM_LENGTH_BICEP)
        self.rBopper = r.uniform(MAXIMUM_RADIUS_BOPPER, MINIMUM_RADIUS_BOPPER)
        self.lString = r.uniform(MAXIMUM_LENGTH_STRING, MINIMUM_LENGTH_STRING)
        
        self.hArms = [r.uniform(MAXIMUM_HEIGHT_ARMS, MINIMUM_HEIGHT_ARMS) for _ in xrange(NUM_APPENDAGES)]

        self.cElasticity = r.random()
